00000013  // 0: NOP
00500113  // 4: addi x2, x0, 5         ; x2 = 5 (I)
00208233  // 8: add x4, x1, x2         ; x4 = x1 + x2 (R)
00410113  // C: addi x2, x2, 4         ; x2 = x2 + 4 (I)
00022103  //10: lw x2, 0(x4)           ; load-use hazard
002102b3  //14: add x5, x2, x2         ; x5 = x2 + x2 (data hazard)
00512023  //18: sw x5, 0(x2)           ; x[2] is address, store x5 (S)
00428263  //1C: beq x5, x4, +8         ; control hazard (B)
008000ef  //20: jal x1, +8             ; jump over next to 0x2C (J)
00000013  //24: NOP                    ; skipped if jal works
00b283b3  //28: add x7, x5, x11        ; dummy (data dep)
00100093  //2C: addi x1, x0, 1         ; x1 = 1
020002b7  //30: lui x5, 0x20000        ; U-type: x5 = 0x20000000
00110113  //34: addi x2, x2, 1         ; x2 += 1
00c120e7  //38: jalr x1, 12(x2)        ; JALR to x2+12, store PC+4 to x1
00000013  //3C: NOP                    ; in delay slot
00a10223  //40: sw x10, 0(x2)          ; misaligned store: x2 = 9 â†’ cause warning
00000013  //44: NOP
00000013  //48: NOP
6f000000  //4C: j 0                    ; infinite loop
