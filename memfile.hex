00000013 // NOP (addi x0, x0, 0)
00500113 // addi x2, x0, 5 ; x2 = 5
00208233 // add x4, x1, x2 ; x4 = x1 + x2 (x1=0 initially)
00410113 // addi x2, x2, 4 ; x2 = x2 + 4 => 9
00022103 // lw x2, 0(x4) ; x2 = mem[x4] → triggers load-use hazard
002102b3 // add x5, x2, x2 ; x5 = x2 + x2 → should wait for lw
00512023 // sw x5, 0(x2) ; mem[x2] = x5
00428263 // beq x5, x4, skip ; if x5==x4, skip jal
008000ef // jal x1, 8 ; jump ahead (should be skipped if branch taken)
00000013 // NOP
00b283b3 // add x7, x5, x11 ; continuation
6f000000 // j 0 (jump to current PC - infinite loop)
